<?php
/**
 * @author Harry Tang <harry@powerkernel.com>
 * @link https://powerkernel.com
 * @copyright Copyright (c) 2018 Power Kernel
 */


namespace powerkernel\yiicore\controllers;

use powerkernel\yiicore\forms\AuthRequestForm;
use powerkernel\yiicore\models\Auth;
use yii\filters\AccessControl;
use yii\filters\auth\HttpBasicAuth;
use yii\filters\VerbFilter;
use yii\web\BadRequestHttpException;


/**
 * Class AuthController
 */
class AuthController extends \yii\rest\Controller
{

    public $serializer = [
        '__class' => \yii\rest\Serializer::class,
        'collectionEnvelope' => 'items',
    ];

    /**
     * @inheritdoc
     * @return array
     */
//    public function behaviors()
//    {
//        return [
//            'verbs' => [
//                '__class' => VerbFilter::class,
//                'actions' => [
//                    //'request' => ['post'],
//                ],
//            ],
//        ];
//    }

    /**
     * @param $action
     * @return bool
     * @throws \yii\web\BadRequestHttpException
     */
    public function beforeAction($action)
    {
        if (\Yii::$app->request->isPost || \Yii::$app->request->isPatch) {
            \Yii::$app->request->setHeader('Content-Type', 'application/json');
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * request for authentication
     * @return array
     * @throws \yii\base\InvalidConfigException
     * @throws \yii\web\UnsupportedMediaTypeHttpException
     */
    public function actionRequest()
    {
        $model = new AuthRequestForm();
        $model->load(\Yii::$app->getRequest()->getParsedBody(), '');
        if ($model->validate()) {
            $auth = new Auth();
            $auth->identifier=$model->identifier;
            if($auth->save()){
                return [
                    'success'=>true,
                    'data'=>[
                        'id'=>$auth->getId(),
                        'identifier'=>$auth->identifier,
                    ]
                ];
            }
        } else {
            return [
                'success'=>false,
                'data'=>[
                    'errors'=>$model->errors
                ]
            ];
        }
    }

    public function actionVerify(){

    }
}
